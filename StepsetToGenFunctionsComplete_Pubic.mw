<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2022" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" compactdisplay="false" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" scientificx="true" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" historytimestamp="false" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1200" rtablesize="[10, 10]" useclientjvm="true" format="worksheet" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" trailingsemicolon="true" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group hide-input="false" labelreference="L1" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Okay. The goal with this code is to go from:</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">(1) A 3D stepset to the optimal 1D stepset (refer to 3d_GrowthConstant_Projections.mw)</Text-field><Text-field style="Text" layout="Normal">(2) A 1D stepset to a grammar (refer to GenerateGrammarFromSteps</Text-field><Text-field style="Text" layout="Normal">et.mw)</Text-field><Text-field style="Text" layout="Normal">(3) A grammar to a set of generating functions, approximated as polynomials (refer to journal notes from Nov. 9 meeting).</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">Let's start by going from the 3D stepset to the optimal 1D stepset.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">First, input the 3D stepset as a list of vectors.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart;
with(VectorCalculus):

StepSet :=
[
Vector([1,0,0]),
Vector([0,1,0]),
Vector([0,0,1]),
Vector([-1,0,0]),
Vector([0,-1,0]),
Vector([0,0,-1]),
Vector([-1,0,0]),
Vector([0,-1,0]),
Vector([0,0,-1]),
Vector([-1,0,0]),
Vector([0,-1,0]),
Vector([0,0,-1])
];

getPointedGrammar := true;

Drift := add(i, i in StepSet);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUShTdGVwU2V0RicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GNlEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkAvJSlzdHJldGNoeUdGQC8lKnN5bW1ldHJpY0dGQC8lKGxhcmdlb3BHRkAvJS5tb3ZhYmxlbGltaXRzR0ZALyUnYWNjZW50R0ZALyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTy1JKG1mZW5jZWRHRiQ2Ji1GLDY8LUkobWFjdGlvbkdGJDYlLUYsNistRiw2Jy1GUzYkLUYsNiYtSSNtbkdGJDYkUSIxRidGPC8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGQEY8RjwtSSVtc3ViR0YkNiUtRi82JVEiZUYnRjJGNS1GLzYlUSJ4RidGMkY1LyUvc3Vic2NyaXB0c2hpZnRHUSIwRidGYG9GY29GPC1GOTYtUSIrRidGPEY+RkFGQ0ZFRkdGSUZLL0ZOUSwwLjIyMjIyMjJlbUYnL0ZRRmVwLUYsNictRlM2JC1GLDYmLUZdbzYkRmBwRjxGYG9GY29GPEY8LUZmbzYlRmhvLUYvNiVRInlGJ0YyRjVGXnBGYG9GY29GPEZhcC1GLDYnRmlwLUZmbzYlRmhvLUYvNiVRInpGJ0YyRjVGXnBGYG9GY29GPEZgb0Zjb0Y8L0krbXNlbWFudGljc0dGJFEnVmVjdG9yRicvJSthY3Rpb250eXBlR1EucnRhYmxlYWRkcmVzc0YnLyUpcnRhYmxlaWRHUTUzNjg5MzQ5MDU2MTE5MDg1NDc3MkYnLUY5Ni1RIixGJ0Y8Rj4vRkJGNEZDRkVGR0ZJRksvRk5RJjAuMGVtRicvRlFRLDAuMzMzMzMzM2VtRictRlg2JS1GLDYrLUYsNidGaXBGZW9GYG9GY29GPEZhcC1GLDYnRmhuRl9xRmBvRmNvRjxGYXBGZHFGYG9GY29GPEZbckZeci9GYnJRNTM2ODkzNDkwNTYxMTkwODU0ODkyRidGZHItRlg2JS1GLDYrRmBzRmFwRmdwRmFwLUYsNidGaG5GZnFGYG9GY29GPEZgb0Zjb0Y8RltyRl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTUwMTJGJ0Zkci1GWDYlLUYsNistRiw2Jy1GUzYkLUYsNiYtRl1vNiRRKyZ1bWludXMwOzFGJ0Y8RmBvRmNvRjxGPEZlb0Zgb0Zjb0Y8RmFwRmdwRmFwRmRxRmBvRmNvRjxGW3JGXnIvRmJyUTUzNjg5MzQ5MDU2MTE5MDg1NTEzMkYnRmRyLUZYNiUtRiw2K0Zgc0ZhcC1GLDYnRmR0Rl9xRmBvRmNvRjxGYXBGZHFGYG9GY29GPEZbckZeci9GYnJRNTM2ODkzNDkwNTYxMTkwODU1MjUyRidGZHItRlg2JS1GLDYrRmBzRmFwRmdwRmFwLUYsNidGZHRGZnFGYG9GY29GPEZgb0Zjb0Y8RltyRl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTUzNzJGJ0Zkci1GWDYlRmB0Rl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTU0OTJGJ0Zkci1GWDYlRl91Rl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTU2MTJGJ0Zkci1GWDYlRmd1Rl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTU3MzJGJ0Zkci1GWDYlRmB0Rl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTU4NTJGJ0Zkci1GWDYlRl91Rl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTU5NzJGJ0Zkci1GWDYlRmd1Rl5yL0ZiclE1MzY4OTM0OTA1NjExOTA4NTYwOTJGJ0Zgb0Zjb0Y8RjwvJSVvcGVuR1EnJmxzcWI7RicvJSZjbG9zZUdRJyZyc3FiO0YnRjwtRlM2Ji1GLDY8LUZTNigtRiw2Ji1JJ210YWJsZUdGJDY5LUkkbXRyR0YkNigtSSRtdGRHRiQ2Ki1GXW82JkZfb0Zgb0Zjb0Y8RmBvRmNvLyUpcm93YWxpZ25HUSFGJy8lLGNvbHVtbmFsaWduR0ZgeS8lK2dyb3VwYWxpZ25HRmB5LyUocm93c3BhbkdGX28vJStjb2x1bW5zcGFuR0Zfb0Zgb0Zjb0ZeeUZheUZjeS1GZ3g2KC1Gang2Ki1GXW82JkZgcEZgb0Zjb0Y8RmBvRmNvRl55RmF5RmN5RmV5Rmd5RmBvRmNvRl55RmF5RmN5Rml5RmBvRmNvLyUmYWxpZ25HUSVheGlzRicvRl95USliYXNlbGluZUYnL0ZieVEmcmlnaHRGJy9GZHlRJ3xmcmxlZnR8aHJGJy8lL2FsaWdubWVudHNjb3BlR0Y0LyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGXFtsLyUrcm93c3BhY2luZ0dRJjEuMGV4RicvJS5jb2x1bW5zcGFjaW5nR1EmMC44ZW1GJy8lKXJvd2xpbmVzR1Elbm9uZUYnLyUsY29sdW1ubGluZXNHRmdbbC8lJmZyYW1lR0ZnW2wvJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0ZALyUtZXF1YWxjb2x1bW5zR0ZALyUtZGlzcGxheXN0eWxlR0ZALyUlc2lkZUdGZXovJTBtaW5sYWJlbHNwYWNpbmdHRmRbbEZgb0Zjb0Y8RmBvRmNvRjwvRmZ3USJbRicvRml3USJdRidGZHItRlM2KC1GLDYmLUZkeDY5Rml5RmZ4Rml5RmBvRmNvRl96RmJ6RmR6RmZ6Rmh6Rmp6Rl1bbEZfW2xGYltsRmVbbEZoW2xGaltsRlxcbEZfXGxGYVxsRmNcbEZlXGxGZ1xsRmBvRmNvRjxGYG9GY29GPEZpXGxGW11sRmRyLUZTNigtRiw2Ji1GZHg2OUZpeUZpeUZmeEZgb0Zjb0ZfekZiekZkekZmekZoekZqekZdW2xGX1tsRmJbbEZlW2xGaFtsRmpbbEZcXGxGX1xsRmFcbEZjXGxGZVxsRmdcbEZgb0Zjb0Y8RmBvRmNvRjxGaVxsRltdbEZkci1GUzYoLUYsNiYtRmR4NjktRmd4NigtRmp4NiotRiw2Jy1GOTYvUSomdW1pbnVzMDtGJ0Zgb0Zjb0Y8Rj5GQUZDRkVGR0ZJRktGZHBGZnBGXHlGYG9GY29GPEZgb0Zjb0ZeeUZheUZjeUZleUZneUZgb0Zjb0ZeeUZheUZjeUZpeUZpeUZgb0Zjb0ZfekZiekZkekZmekZoekZqekZdW2xGX1tsRmJbbEZlW2xGaFtsRmpbbEZcXGxGX1xsRmFcbEZjXGxGZVxsRmdcbEZgb0Zjb0Y8RmBvRmNvRjxGaVxsRltdbEZkci1GUzYoLUYsNiYtRmR4NjlGaXlGX15sRml5RmBvRmNvRl96RmJ6RmR6RmZ6Rmh6Rmp6Rl1bbEZfW2xGYltsRmVbbEZoW2xGaltsRlxcbEZfXGxGYVxsRmNcbEZlXGxGZ1xsRmBvRmNvRjxGYG9GY29GPEZpXGxGW11sRmRyLUZTNigtRiw2Ji1GZHg2OUZpeUZpeUZfXmxGYG9GY29GX3pGYnpGZHpGZnpGaHpGanpGXVtsRl9bbEZiW2xGZVtsRmhbbEZqW2xGXFxsRl9cbEZhXGxGY1xsRmVcbEZnXGxGYG9GY29GPEZgb0Zjb0Y8RmlcbEZbXWxGZHJGaV1sRmRyRmhebEZkckZeX2xGZHJGaV1sRmRyRmhebEZkckZeX2xGYG9GY29GPEY8RmlcbEZbXWw=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShTdGVwU2V0R0YoNy4tSSdSVEFCTEVHRig2JSI1c1omMz5oMFwkKm8kLUknTUFUUklYR0YoNiQ3JTcjLUkjbW5HNiRGJi9JK21vZHVsZW5hbWVHRihGJDYjUSIxRig3Iy1GOTYjUSIwRihGPzclUSJ4RihRInlGKFEiekYoJkknVmVjdG9yR0YlNiNJJ2NvbHVtbkdGKC1GMDYlIjUjKlsmMz5oMFwkKm8kLUY0NiQ3JUY/RjdGP0ZDRkctRjA2JSI1N10mMz5oMFwkKm8kLUY0NiQ3JUY/Rj9GN0ZDRkctRjA2JSI1S14mMz5oMFwkKm8kLUY0NiQ3JTcjLUY5NiNRKyZ1bWludXMwOzFGKEY/Rj9GQ0ZHLUYwNiUiNV9fJjM+aDBcJCpvJC1GNDYkNyVGP0ZnbkY/RkNGRy1GMDYlIjVzYCYzPmgwXCQqbyQtRjQ2JDclRj9GP0ZnbkZDRkctRjA2JSI1I1xiMz5oMFwkKm8kRlpGRy1GMDYlIjU3YyYzPmgwXCQqbyRGXm9GRy1GMDYlIjVLZCYzPmgwXCQqbyRGZG9GRy1GMDYlIjVfZSYzPmgwXCQqbyRGWkZHLUYwNiUiNXNmJjM+aDBcJCpvJEZeb0ZHLUYwNiUiNSM0YzM+aDBcJCpvJEZkb0ZHNyM3Li1GRzYjL0kkJWlkR0YoRjItRkc2Iy9GXnFGTS1GRzYjL0ZecUZTLUZHNiMvRl5xRlktRkc2Iy9GXnFGXW8tRkc2Iy9GXnFGY28tRkc2Iy9GXnFGaW8tRkc2Iy9GXnFGXHAtRkc2Iy9GXnFGX3AtRkc2Iy9GXnFGYnAtRkc2Iy9GXnFGZXAtRkc2Iy9GXnFGaHA=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEyZ2V0UG9pbnRlZEdyYW1tYXJGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUYsNiVGMUYvRjJGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+STJnZXRQb2ludGVkR3JhbW1hckdGKEkldHJ1ZUdGJjcjRi4=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUSZEcmlmdEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjZRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0ZALyUpc3RyZXRjaHlHRkAvJSpzeW1tZXRyaWNHRkAvJShsYXJnZW9wR0ZALyUubW92YWJsZWxpbWl0c0dGQC8lJ2FjY2VudEdGQC8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRk8tSShtYWN0aW9uR0YkNiUtRiw2Ky1GLDYnLUkobWZlbmNlZEdGJDYkLUYsNiYtSSNtbkdGJDYkUSsmdW1pbnVzMDsyRidGPC8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGQEY8RjwtSSVtc3ViR0YkNiUtRi82JVEiZUYnRjJGNS1GLzYlUSJ4RidGMkY1LyUvc3Vic2NyaXB0c2hpZnRHUSIwRidGXG9GX29GPC1GOTYtUSIrRidGPEY+RkFGQ0ZFRkdGSUZLL0ZOUSwwLjIyMjIyMjJlbUYnL0ZRRmFwLUYsNidGWS1GYm82JUZkby1GLzYlUSJ5RidGMkY1RmpvRlxvRl9vRjxGXXAtRiw2J0ZZLUZibzYlRmRvLUYvNiVRInpGJ0YyRjVGam9GXG9GX29GPEZcb0Zfb0Y8L0krbXNlbWFudGljc0dGJFEnVmVjdG9yRicvJSthY3Rpb250eXBlR1EucnRhYmxlYWRkcmVzc0YnLyUpcnRhYmxlaWRHUTUzNjg5MzQ5MDU2MTE5NTI5NjE1NkYnRjwtRlo2KC1GLDYmLUknbXRhYmxlR0YkNjktSSRtdHJHRiQ2KC1JJG10ZEdGJDYqLUYsNictRjk2L1EqJnVtaW51czA7RidGXG9GX29GPEY+RkFGQ0ZFRkdGSUZLRmBwRmJwLUZpbjYmUSIyRidGXG9GX29GPEZcb0Zfb0Y8RlxvRl9vLyUpcm93YWxpZ25HUSFGJy8lLGNvbHVtbmFsaWduR0Zhcy8lK2dyb3VwYWxpZ25HRmFzLyUocm93c3BhbkdRIjFGJy8lK2NvbHVtbnNwYW5HRmhzRlxvRl9vRl9zRmJzRmRzRmFyRmFyRlxvRl9vLyUmYWxpZ25HUSVheGlzRicvRmBzUSliYXNlbGluZUYnL0Zjc1EmcmlnaHRGJy9GZXNRJ3xmcmxlZnR8aHJGJy8lL2FsaWdubWVudHNjb3BlR0Y0LyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGaHQvJStyb3dzcGFjaW5nR1EmMS4wZXhGJy8lLmNvbHVtbnNwYWNpbmdHUSYwLjhlbUYnLyUpcm93bGluZXNHUSVub25lRicvJSxjb2x1bW5saW5lc0dGY3UvJSZmcmFtZUdGY3UvJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0ZALyUtZXF1YWxjb2x1bW5zR0ZALyUtZGlzcGxheXN0eWxlR0ZALyUlc2lkZUdGYXQvJTBtaW5sYWJlbHNwYWNpbmdHRmB1RlxvRl9vRjxGXG9GX29GPC8lJW9wZW5HUSJbRicvJSZjbG9zZUdRIl1GJw==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSZEcmlmdEdGKC1JJ1JUQUJMRUdGKDYlIjVjaEgmPmgwXCQqbyQtSSdNQVRSSVhHRig2JDclNyMtSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRKyZ1bWludXMwOzJGKEY2RjY3JVEieEYoUSJ5RihRInpGKCZJJ1ZlY3RvckdGJTYjSSdjb2x1bW5HRig3Iy1GQjYjL0kkJWlkR0YoRjE=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L2" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Then we obtain the optimal vector.

</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal"># We may need to solve this numerically:

# Since vectors don't play nicely with some Maple functions, we need to define them ourselves:
VectorEqual := proc(v1, v2):
  if Norm(v1 - v2) = 0 then
    return true;
  else
    return false;
  fi;
end proc:

VectorInList := proc(v, L);
  local i;
  for i from 1 to nops(L) do
    if VectorEqual(v, L[i]) then
      return true;
    fi;
  od;
  return false;
end proc:

VectorRemoveDuplicates := proc(L);
  local toReturn, v;
  toReturn := [];
  for v in L do
    if not VectorInList(v, toReturn) then
      toReturn := [op(toReturn), v];
    fi;
  od;
  return toReturn;
end proc:

walkInventory3D := proc(stepSet);
  local i;
  return sum(x^stepSet[i][1]*y^stepSet[i][2]*z^stepSet[i][3], i=1..nops(stepSet));
end proc:

toMinimize := proc(phiIn, thetaIn, StepSet);
  local normVector, newList, s, A, k, newSol;
  normVector := Vector([sin(phiIn)*cos(thetaIn), sin(phiIn)*sin(thetaIn), cos(phiIn)]);
  newList := [seq(DotProduct(s, normVector), s in StepSet)];
  A := add(u^k, k in newList);
  newSol := fsolve(diff(A,u), u=0..infinity);
  if (type(newSol, `=`) and evalb(eval(newSol, u = 0))) or (type(newSol, `function`)) then
      newSol := -1;
  fi;
  if newSol &gt;= 0 then
    return eval(A, u=newSol);
  else
    return infinity;
  fi;
end proc:

optimalAnglesHillClimb := proc(StepSet);
  local currentPhi, currentTheta, phiStepSize, thetaStepSize, acceleration, candidate, bestScore, beforeScore, beforePhi, bestStep, i, j, step, score, beforeTheta, Drift;

  # Before we go through all this work, check if the drift is non-negative in all dimensions
  # If it is, just return [1,0,0]
  Drift := add(i, i in StepSet);
  if Drift[1] &gt;= 0 and Drift[2] &gt;= 0 and Drift[3] &gt;= 0 then
    return [Vector([1,0,0]), nops(StepSet)];
  fi;

  # Initial values for Phi and Theta
  currentPhi := 0.25*Pi;
  currentTheta := 0.25*Pi;
  # Initial stepsizes
  phiStepSize := 0.1;
  thetaStepSize := 0.1;
  # Acceleration and candidate values
  acceleration := 1.2;
  candidate := [-acceleration, -1/acceleration, 1/acceleration, acceleration];
  bestScore := toMinimize(currentPhi, currentTheta, StepSet);
  do
    beforeScore := bestScore;
    # First, test new values for phi
    beforePhi := currentPhi;
    bestStep := 0;
    for j from 1 to 4 do
      step := phiStepSize * candidate[j];
      currentPhi := beforePhi + step;
      score := toMinimize(currentPhi, currentTheta, StepSet);
      if (score &lt; bestScore) then
        bestScore := score;
        bestStep := step;
      fi;
    od;
    if (bestStep = 0) then
      currentPhi := beforePhi;
      phiStepSize := phiStepSize / acceleration;
    else
      currentPhi := max(min(beforePhi + bestStep, 0.5*Pi), 0);
      phiStepSize := bestStep;
    fi;
    # Next, test new values for theta
    beforeTheta := currentTheta;
    bestStep := 0;
    for j from 1 to 4 do
      step := thetaStepSize * candidate[j];
      currentTheta := beforeTheta + step;
      score := toMinimize(currentPhi, currentTheta, StepSet);
      if (score &lt; bestScore) then
        bestScore := score;
        bestStep := step;
      fi;
    od;
    if (bestStep = 0) then
      currentTheta := beforeTheta;
      thetaStepSize := thetaStepSize / acceleration;
    else
      currentTheta := max(min(beforeTheta + bestStep, 0.5*Pi), 0);
      thetaStepSize := bestStep;
    fi;
  until (abs(bestScore - beforeScore) &lt; 0.000001);
  #return [currentPhi, currentTheta, bestScore];
  return [Vector([sin(currentPhi)*cos(currentTheta), sin(currentPhi)*sin(currentTheta), cos(currentPhi)]), bestScore];
end proc:

# We can also do this analytically in some cases

isReflectable := proc(inputStepset);
  local stepsetUnweighted, n, i, j, hasReflection, newVecToTest, numIterations, maxIterations;
  stepsetUnweighted := VectorRemoveDuplicates(inputStepset);
  #printf(&quot;stepsetUnweighted<Font encoding="UTF-8">: %a\134n&quot;, </Font>stepsetUnweighted);
  n := nops(stepsetUnweighted);
  #<Font encoding="UTF-8">printf(&quot;n: %a\134n&quot;, n);</Font>
  maxIterations := n;
  numIterations := 0;
  while (nops(stepsetUnweighted) &gt; 0) and (numIterations &lt; maxIterations) do
    numIterations := numIterations + 1;
    newVecToTest := -1 * stepsetUnweighted[1];
    #<Font encoding="UTF-8">printf(&quot;newVecToTest: %a\134n&quot;, newVecToTest);
</Font>    # Presume that the reflection is not found until it is.
    hasReflection := false;
    for j from 2 to nops(stepsetUnweighted) do
      #printf(&quot;<Font encoding="UTF-8">stepsetUnweighted[j] = %a\134n&quot;, </Font>stepsetUnweighted[j]);
      #printf(&quot;<Font encoding="UTF-8">Norm(newVecToTest - stepsetUnweighted[j]) = %a\134n&quot;, </Font>Norm(newVecToTest - stepsetUnweighted[j]));
      if VectorEqual(newVecToTest, stepsetUnweighted[j]) then
        hasReflection := true;
        stepsetUnweighted := subsop(j = NULL, 1 = NULL, stepsetUnweighted);
        #printf(&quot;nops(stepsetUnweighted)<Font encoding="UTF-8"> after removing elements: %a\134n&quot;, </Font>nops(stepsetUnweighted));
        break;
      fi;
    od;
    if (not hasReflection) then
      return false;
    fi;
  od;
  # If we've gotten this far, then every element has a reflection in the stepset.
  return true;
end proc:

getOptimalVector := proc(stepsetIn);
  local myInv, x_star, y_star, z_star, denom, toReturn, growthConstant;
  if isReflectable(stepsetIn) then
    #print(&quot;It's reflectable!&quot;);
    # In this case, we can solve for the optimal vector
    myInv := walkInventory3D(stepsetIn);
<Font encoding="UTF-8">    #printf(&quot;myInv: %a\134n&quot;, </Font>myInv);
    x_star := max(1, rhs(solve({diff(myInv, x) = 0, x &gt; 0})[1]));
    y_star := max(1, rhs(solve({diff(myInv, y) = 0, y &gt; 0})[1]));
    z_star := max(1, rhs(solve({diff(myInv, z) = 0, z &gt; 0})[1]));

    growthConstant := eval(myInv, {x = x_star, y = y_star, z = z_star});
    if (x_star = 1 and y_star = 1 and z_star = 1) then
      # Any halfplane is acceptable; might as well return (1,0,0)
      return [Vector([1,0,0]), growthConstant];
    elif z_star = 1 then
      toReturn := Vector([log(x_star), log(y_star), 0]);
      return [toReturn, growthConstant];
    else
      denom := log(z_star);
      toReturn := Vector([log(x_star)/denom, log(y_star)/denom, 1]);
      return [toReturn, growthConstant];
    fi;
  else
    # Must use numeric approximation
    return optimalAnglesHillClimb(stepsetIn);
  fi;
end proc:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L3" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">result := getOptimalVector(StepSet);
optimalVector := result[1];
rho_approx := evalf(1/result[2]);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUSdyZXN1bHRGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0Y2USdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGQC8lKXN0cmV0Y2h5R0ZALyUqc3ltbWV0cmljR0ZALyUobGFyZ2VvcEdGQC8lLm1vdmFibGVsaW1pdHNHRkAvJSdhY2NlbnRHRkAvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZPLUkobWZlbmNlZEdGJDYmLUYsNigtSShtYWN0aW9uR0YkNiUtRiw2Ky1GLDYnLUZTNiQtRiw2Ji1JI21uR0YkNiRRIjFGJ0Y8LyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZARjxGPC1JJW1zdWJHRiQ2JS1GLzYlUSJlRidGMkY1LUYvNiVRInhGJ0YyRjUvJS9zdWJzY3JpcHRzaGlmdEdRIjBGJ0Zgb0Zjb0Y8LUY5Ni1RIitGJ0Y8Rj5GQUZDRkVGR0ZJRksvRk5RLDAuMjIyMjIyMmVtRicvRlFGZXAtRiw2J0Zobi1GZm82JUZoby1GLzYlUSJ5RidGMkY1Rl5wRmBvRmNvRjxGYXAtRiw2J0Zobi1GZm82JUZoby1GLzYlUSJ6RidGMkY1Rl5wRmBvRmNvRjxGYG9GY29GPC9JK21zZW1hbnRpY3NHRiRRJ1ZlY3RvckYnLyUrYWN0aW9udHlwZUdRLnJ0YWJsZWFkZHJlc3NGJy8lKXJ0YWJsZWlkR1E1MzY4OTM0OTA1NjEyODM1NjA4NjBGJy1GOTYtUSIsRidGPEY+L0ZCRjRGQ0ZFRkdGSUZLL0ZOUSYwLjBlbUYnL0ZRUSwwLjMzMzMzMzNlbUYnLUYsNiYtRl1vNiRRIjZGJ0Y8LUY5Ni1RMSZJbnZpc2libGVUaW1lcztGJ0Y8Rj5GQUZDRkVGR0ZJRktGYnIvRlFGY3ItSSZtc3FydEdGJDYjLUZdbzYkUSIzRidGPEY8RmBvRmNvRjxGPC8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGPC1GUzYmLUYsNigtRlM2KC1GLDYmLUknbXRhYmxlR0YkNjktSSRtdHJHRiQ2KC1JJG10ZEdGJDYqLUZdbzYmRl9vRmBvRmNvRjxGYG9GY28vJSlyb3dhbGlnbkdRIUYnLyUsY29sdW1uYWxpZ25HRmB1LyUrZ3JvdXBhbGlnbkdGYHUvJShyb3dzcGFuR0Zfby8lK2NvbHVtbnNwYW5HRl9vRmBvRmNvRl51RmF1RmN1RmZ0RmZ0RmBvRmNvLyUmYWxpZ25HUSVheGlzRicvRl91USliYXNlbGluZUYnL0ZidVEmcmlnaHRGJy9GZHVRJ3xmcmxlZnR8aHJGJy8lL2FsaWdubWVudHNjb3BlR0Y0LyUsY29sdW1ud2lkdGhHUSVhdXRvRicvJSZ3aWR0aEdGZnYvJStyb3dzcGFjaW5nR1EmMS4wZXhGJy8lLmNvbHVtbnNwYWNpbmdHUSYwLjhlbUYnLyUpcm93bGluZXNHUSVub25lRicvJSxjb2x1bW5saW5lc0dGYXcvJSZmcmFtZUdGYXcvJS1mcmFtZXNwYWNpbmdHUSwwLjRlbX4wLjVleEYnLyUqZXF1YWxyb3dzR0ZALyUtZXF1YWxjb2x1bW5zR0ZALyUtZGlzcGxheXN0eWxlR0ZALyUlc2lkZUdGX3YvJTBtaW5sYWJlbHNwYWNpbmdHRl53RmBvRmNvRjxGYG9GY29GPC9GZnNRIltGJy9GaXNRIl1GJ0ZeckZmckZgb0Zjb0Y8RjxGY3hGZXg=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSdyZXN1bHRHRig3JC1JJ1JUQUJMRUdGKDYlIjVnM2MkR2gwXCQqbyQtSSdNQVRSSVhHRig2JDclNyMtSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRIjFGKEY3Rjc3JVEieEYoUSJ5RihRInpGKCZJJ1ZlY3RvckdGJTYjSSdjb2x1bW5HRigsJCokIiIkIyIiIiIiIyIiJzcjNyQtRkM2Iy9JJCVpZEdGKEYyRkc=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUS5vcHRpbWFsVmVjdG9yRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GNlEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkAvJSlzdHJldGNoeUdGQC8lKnN5bW1ldHJpY0dGQC8lKGxhcmdlb3BHRkAvJS5tb3ZhYmxlbGltaXRzR0ZALyUnYWNjZW50R0ZALyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTy1JKG1hY3Rpb25HRiQ2JS1GLDYrLUYsNictSShtZmVuY2VkR0YkNiQtRiw2Ji1JI21uR0YkNiRRIjFGJ0Y8LyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZARjxGPC1JJW1zdWJHRiQ2JS1GLzYlUSJlRidGMkY1LUYvNiVRInhGJ0YyRjUvJS9zdWJzY3JpcHRzaGlmdEdRIjBGJ0Zcb0Zfb0Y8LUY5Ni1RIitGJ0Y8Rj5GQUZDRkVGR0ZJRksvRk5RLDAuMjIyMjIyMmVtRicvRlFGYXAtRiw2J0ZZLUZibzYlRmRvLUYvNiVRInlGJ0YyRjVGam9GXG9GX29GPEZdcC1GLDYnRlktRmJvNiVGZG8tRi82JVEiekYnRjJGNUZqb0Zcb0Zfb0Y8RlxvRl9vRjwvSSttc2VtYW50aWNzR0YkUSdWZWN0b3JGJy8lK2FjdGlvbnR5cGVHUS5ydGFibGVhZGRyZXNzRicvJSlydGFibGVpZEdRNTM2ODkzNDkwNTYxMjgzNTYwODYwRidGPC1GWjYoLUYsNiYtSSdtdGFibGVHRiQ2OS1JJG10ckdGJDYoLUkkbXRkR0YkNiotRmluNiZGW29GXG9GX29GPEZcb0Zfby8lKXJvd2FsaWduR1EhRicvJSxjb2x1bW5hbGlnbkdGW3MvJStncm91cGFsaWduR0Zbcy8lKHJvd3NwYW5HRltvLyUrY29sdW1uc3BhbkdGW29GXG9GX29GaXJGXHNGXnNGYXJGYXJGXG9GX28vJSZhbGlnbkdRJWF4aXNGJy9GanJRKWJhc2VsaW5lRicvRl1zUSZyaWdodEYnL0Zfc1EnfGZybGVmdHxockYnLyUvYWxpZ25tZW50c2NvcGVHRjQvJSxjb2x1bW53aWR0aEdRJWF1dG9GJy8lJndpZHRoR0ZhdC8lK3Jvd3NwYWNpbmdHUSYxLjBleEYnLyUuY29sdW1uc3BhY2luZ0dRJjAuOGVtRicvJSlyb3dsaW5lc0dRJW5vbmVGJy8lLGNvbHVtbmxpbmVzR0ZcdS8lJmZyYW1lR0ZcdS8lLWZyYW1lc3BhY2luZ0dRLDAuNGVtfjAuNWV4RicvJSplcXVhbHJvd3NHRkAvJS1lcXVhbGNvbHVtbnNHRkAvJS1kaXNwbGF5c3R5bGVHRkAvJSVzaWRlR0Zqcy8lMG1pbmxhYmVsc3BhY2luZ0dGaXRGXG9GX29GPEZcb0Zfb0Y8LyUlb3BlbkdRIltGJy8lJmNsb3NlR1EiXUYn">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SS5vcHRpbWFsVmVjdG9yR0YoLUknUlRBQkxFR0YoNiUiNWczYyRHaDBcJCpvJC1JJ01BVFJJWEdGKDYkNyU3Iy1JI21uRzYkRiYvSSttb2R1bGVuYW1lR0YoRiQ2I1EiMUYoRjZGNjclUSJ4RihRInlGKFEiekYoJkknVmVjdG9yR0YlNiNJJ2NvbHVtbkdGKDcjLUZCNiMvSSQlaWRHRihGMQ==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErcmhvX2FwcHJveEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtbkdGJDYkUS4wLjA5NjIyNTA0NDkwRidGOUY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStyaG9fYXBwcm94R0YoJCIrIVwvRGkqISM2NyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L29" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Now let's find the corresponding 1D stepset.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">newStepSet := map(x -&gt; DotProduct(x, optimalVector), StepSet);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErbmV3U3RlcFNldEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2PC1JI21uR0YkNiRRIjFGJ0Y5LUY2Ni1RIixGJ0Y5RjsvRj9GMUZARkJGREZGRkgvRktRJjAuMGVtRicvRk5RLDAuMzMzMzMzM2VtRidGVEZYRlRGWC1GVTYkUSsmdW1pbnVzMDsxRidGOUZYRmpuRlhGam5GWEZqbkZYRmpuRlhGam5GWEZqbkZYRmpuRlhGam4vJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStuZXdTdGVwU2V0R0YoNy4iIiJGL0YvISIiRjBGMEYwRjBGMEYwRjBGMDcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L4" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Now let's approximate this as an integer stepset:
</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">ratApproxDenom := proc(inNum, inDenom);
  return round(inNum * inDenom)/inDenom;
end proc:

ratApproxDenomList := proc(inList, inDenom);
  local i;
  return [seq(ratApproxDenom(i, inDenom), i in inList)];
end proc:

with(SignalProcessing):

ratApproxList := proc(inList, maxDenom);
  local i, currentMin, bestList, currentList, newMin;
  currentMin := infinity;
  bestList := [];
  for i from 1 to maxDenom do
    currentList := ratApproxDenomList(inList, i);
    printf(&quot;currentList<Font encoding="UTF-8"> = %a\134n&quot;, </Font>currentList);
    newMin := RootMeanSquare(currentList - inList);
    if newMin &lt; currentMin then
      bestList := currentList;
      currentMin := newMin;
      print(currentMin);
    fi;
  od;
  return bestList;
end proc:

intApproxListOld := proc(inList, maxDenom);
  local ratList, ilcm_denom, igcd_numer;
  ratList := ratApproxList(inList, maxDenom);
  ilcm_denom := ilcm(op({op(map(denom, ratList))}));
  igcd_numer := igcd(op({op(map(numer, ratList))}));
  return ratList * (ilcm_denom / igcd_numer);
end proc:

intApproxList := proc(inList, maxDenom);
  local intList, x, intGCD;
  intList := [seq(round(x), x in maxDenom * inList)];
  intGCD := igcd(op({op(intList)}));
  return intList / intGCD;
end proc:</Text-field><Text-field style="Text" layout="Normal"></Text-field>
</Input>
<Input><Text-field prompt="&gt; " style="Maple Input" spaceabove="0" linebreak="space" rightmargin="0" linespacing="0.0" initial="0" firstindent="0" leftmargin="0" bulletsuffix="" alignment="left" bullet="none" spacebelow="0" pagebreak-before="false"></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L27" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">intStepSet := intApproxList(newStepSet, 10);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEraW50U3RlcFNldEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2PC1JI21uR0YkNiRRIjFGJ0Y5LUY2Ni1RIixGJ0Y5RjsvRj9GMUZARkJGREZGRkgvRktRJjAuMGVtRicvRk5RLDAuMzMzMzMzM2VtRidGVEZYRlRGWC1GVTYkUSsmdW1pbnVzMDsxRidGOUZYRmpuRlhGam5GWEZqbkZYRmpuRlhGam5GWEZqbkZYRmpuRlhGam4vJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStpbnRTdGVwU2V0R0YoNy4iIiJGL0YvISIiRjBGMEYwRjBGMEYwRjBGMDcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L34" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Before we construct the grammar, we must keep track of which atom corresponds to which 3D vector.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">a_values := select(x -&gt; x &gt; 0, intStepSet);
b_values := map(x -&gt; -1 * x, select(x -&gt; x &lt; 0, intStepSet));
c_values := select(x -&gt; x = 0, intStepSet);

a_index := 1;
b_index := 1;
c_index := 1;

for i from 1 to nops(intStepSet) do
  if intStepSet[i] &gt; 0 then
    a_vector[a_index] := convert(StepSet[i], list);
    a_index := a_index + 1;
  elif intStepSet[i] &lt; 0 then
    b_vector[b_index] := convert(StepSet[i], list);
    b_index := b_index + 1;
  else
    c_vector[c_index] := convert(StepSet[i], list);
    c_index := c_index + 1
  fi;
od;

a_index, b_index, c_index;

atomSet := {seq(atom_a[i] = a_vector[i], i = 1..(a_index - 1))} union {seq(atom_b[i] = b_vector[i], i = 1..(b_index - 1))} union {seq(atom_c[i] = c_vector[i], i = 1..(c_index - 1))};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEpYV92YWx1ZXNGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNiotSSNtbkdGJDYkUSIxRidGOS1GNjYtUSIsRidGOUY7L0Y/RjFGQEZCRkRGRkZIL0ZLUSYwLjBlbUYnL0ZOUSwwLjMzMzMzMzNlbUYnRlRGWEZULyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSlhX3ZhbHVlc0dGKDclIiIiRi9GLzcjRi4=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEpYl92YWx1ZXNGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNjYtSSNtbkdGJDYkUSIxRidGOS1GNjYtUSIsRidGOUY7L0Y/RjFGQEZCRkRGRkZIL0ZLUSYwLjBlbUYnL0ZOUSwwLjMzMzMzMzNlbUYnRlRGWEZURlhGVEZYRlRGWEZURlhGVEZYRlRGWEZULyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0Y9RjlGOS8lJW9wZW5HUScmbHNxYjtGJy8lJmNsb3NlR1EnJnJzcWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSliX3ZhbHVlc0dGKDcrIiIiRi9GL0YvRi9GL0YvRi9GLzcjRi4=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEpY192YWx1ZXNGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYlRjkvJSVvcGVuR1EnJmxzcWI7RicvJSZjbG9zZUdRJyZyc3FiO0YnRjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSljX3ZhbHVlc0dGKDciNyNGLg==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEoYV9pbmRleEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtbkdGJDYkUSIxRidGOUY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShhX2luZGV4R0YoIiIiNyNGLg==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEoYl9pbmRleEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtbkdGJDYkUSIxRidGOUY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShiX2luZGV4R0YoIiIiNyNGLg==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEoY19pbmRleEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtbkdGJDYkUSIxRidGOUY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShjX2luZGV4R0YoIiIiNyNGLg==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkjbW5HRiQ2JFEiNEYnLyUsbWF0aHZhcmlhbnRHUSdub3JtYWxGJy1JI21vR0YkNi1RKCZjb21tYTtGJ0YvLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR1EldHJ1ZUYnLyUpc3RyZXRjaHlHRjgvJSpzeW1tZXRyaWNHRjgvJShsYXJnZW9wR0Y4LyUubW92YWJsZWxpbWl0c0dGOC8lJ2FjY2VudEdGOC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHUSwwLjMzMzMzMzNlbUYnLUYsNiRRIzEwRidGL0YyLUYsNiRRIjFGJ0YvRi8=">NiUiIiUiIzUiIiI=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEoYXRvbVNldEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2PC1GIzYmLUklbXN1YkdGJDYlLUYsNiVRJ2F0b21fYUYnRi9GMi1JI21uR0YkNiRRIjFGJ0Y5LyUvc3Vic2NyaXB0c2hpZnRHUSIwRictRjY2LVEpJmVxdWFscztGJ0Y5RjtGPkZARkJGREZGRkhGSkZNLUZQNiYtRiM2KkZmbi1GNjYtUSIsRidGOUY7L0Y/RjFGQEZCRkRGRkZIL0ZLUSYwLjBlbUYnL0ZOUSwwLjMzMzMzMzNlbUYnLUZnbjYkRlxvRjlGZG9GXHAvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5LyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0Y5RmRvLUYjNiYtRlc2JUZZLUZnbjYkUSIyRidGOUZqbkZdby1GUDYmLUYjNipGXHBGZG9GZm5GZG9GXHBGXnBGYXBGOUY5RmNwRmZwRjlGZG8tRiM2Ji1GVzYlRlktRmduNiRRIjNGJ0Y5RmpuRl1vLUZQNiYtRiM2KkZccEZkb0ZccEZkb0ZmbkZecEZhcEY5RjlGY3BGZnBGOUZkby1GIzYmLUZXNiUtRiw2JVEnYXRvbV9iRidGL0YyRmZuRmpuRl1vLUZQNiYtRiM2Ki1GZ242JFErJnVtaW51czA7MUYnRjlGZG9GXHBGZG9GXHBGXnBGYXBGOUY5RmNwRmZwRjlGZG8tRiM2Ji1GVzYlRmNyRl1xRmpuRl1vLUZQNiYtRiM2KkZccEZkb0ZqckZkb0ZccEZecEZhcEY5RjlGY3BGZnBGOUZkby1GIzYmLUZXNiVGY3JGaHFGam5GXW8tRlA2Ji1GIzYqRlxwRmRvRlxwRmRvRmpyRl5wRmFwRjlGOUZjcEZmcEY5RmRvLUYjNiYtRlc2JUZjci1GZ242JFEiNEYnRjlGam5GXW9GZnJGOUZkby1GIzYmLUZXNiVGY3ItRmduNiRRIjVGJ0Y5RmpuRl1vRmFzRjlGZG8tRiM2Ji1GVzYlRmNyLUZnbjYkUSI2RidGOUZqbkZdb0Zpc0Y5RmRvLUYjNiYtRlc2JUZjci1GZ242JFEiN0YnRjlGam5GXW9GZnJGOUZkby1GIzYmLUZXNiVGY3ItRmduNiRRIjhGJ0Y5RmpuRl1vRmFzRjlGZG8tRiM2Ji1GVzYlRmNyLUZnbjYkUSI5RidGOUZqbkZdb0Zpc0Y5Rl5wRmFwRjlGOS9GZHBRJyZsY3ViO0YnL0ZncFEnJnJjdWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SShhdG9tU2V0R0YoPC4vJkknYXRvbV9hR0YoNiMiIiI3JUYzIiIhRjUvJkYxNiMiIiM3JUY1RjNGNS8mRjE2IyIiJDclRjVGNUYzLyZJJ2F0b21fYkdGKEYyNyUhIiJGNUY1LyZGQkY4NyVGNUZERjUvJkZCRj03JUY1RjVGRC8mRkI2IyIiJUZDLyZGQjYjIiImRkcvJkZCNiMiIidGSi8mRkI2IyIiKEZDLyZGQjYjIiIpRkcvJkZCNiMiIipGSjcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L32" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Now to construct a grammar given a 1d step set.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">Note: This is another function that may be a candidate for optimizing. Look at how inefficiently I'm dealing with unions right now.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">ALSO: This is the stage at which I should be keeping track of which atoms correspond to which steps!</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(combstruct):

stepsetToGrammar := proc(inputStepset);
local walkGrammar, a_values, b_values, c_values, i, a_bar, b_bar, P_aux_sum_list, a_list, j, k, b_list;
walkGrammar := {};

walkGrammar := walkGrammar union {P = Prod(Dee, P_aux)}:


a_values := select(x -&gt; x &gt; 0, inputStepset);
b_values := map(x -&gt; -1 * x, select(x -&gt; x &lt; 0, inputStepset));
c_values := select(x -&gt; x = 0, inputStepset);

walkGrammar := walkGrammar union {seq(a[i] = Atom, i = 1..nops(a_values))}:
walkGrammar := walkGrammar union {seq(b[i] = Atom, i = 1..nops(b_values))}:
walkGrammar := walkGrammar union {seq(c[i] = Atom, i = 1..nops(c_values))}:

# Calculate a_bar and b_bar?
a_bar := max(a_values);
b_bar := max(b_values);

# Have to create the sum, from k = 1..a_bar, of Prod(L_k, P_aux). Then union with Epsilon.
P_aux_sum_list := [seq(Prod(L[i], `P_aux`), i = 1..a_bar)]:


walkGrammar := walkGrammar union {P_aux = Union(Epsilon, op(P_aux_sum_list))}:

# Now consider L_i

for i from 1 to a_bar do
  a_list := select(j -&gt; a_values[j] = i, [seq(1..nops(a_values), 1)]);
  walkGrammar := walkGrammar union {L[i] = Union(seq(Prod(a[j], Dee), j in a_list), seq(Prod(L[k], R[k - i]), k = (i+1)..min(a_bar, i + b_bar)))}:
od;

# And now R_i

for i from 1 to b_bar do
  b_list := select(j -&gt; b_values[j] = i, [seq(1..nops(b_values), 1)]);
  walkGrammar := walkGrammar union {R[i] = Union(seq(Prod(b[j], Dee), j in b_list), seq(Prod(L[k - i], R[k]), k = (i+1)..min(i + a_bar, b_bar)))};
od;

# And finally, &quot;Dee&quot;:

walkGrammar := walkGrammar union {Dee = Union(Epsilon, seq(Prod(c[i], Dee), i = 1..nops(c_values)), seq(Prod(L[k], R[k]), k = 1..min(a_bar, b_bar)))}:
return walkGrammar;

end proc:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L35" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">newGrammar := stepsetToGrammar(intStepSet);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErbmV3R3JhbW1hckYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2Ri1GIzYmLUYsNiVRJERlZUYnRi9GMi1GNjYtUSkmZXF1YWxzO0YnRjlGO0Y+RkBGQkZERkZGSEZKRk0tRiM2Ji1GLDYlUSZVbmlvbkYnRi9GMi1GNjYtUTAmQXBwbHlGdW5jdGlvbjtGJ0Y5RjtGPkZARkJGREZGRkgvRktRJjAuMGVtRicvRk5GX28tRlA2JC1GIzYoLUYsNiVRKiZFcHNpbG9uO0YnL0YwRj1GOS1GNjYtUSIsRidGOUY7L0Y/RjFGQEZCRkRGRkZIRl5vL0ZOUSwwLjMzMzMzMzNlbUYnLUYjNiYtRiw2JVElUHJvZEYnRi9GMkZbby1GUDYkLUYjNigtSSVtc3ViR0YkNiUtRiw2JVEiTEYnRi9GMi1JI21uR0YkNiRRIjFGJ0Y5LyUvc3Vic2NyaXB0c2hpZnRHUSIwRidGaW8tRmlwNiUtRiw2JVEiUkYnRi9GMkZecUZicS8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGPUY5RjlGOUZqcUZdckY5RjlGOUY5RmlvLUYjNiYtRiw2JVEiUEYnRi9GMkZZLUYjNiZGYXBGW28tRlA2JC1GIzYoRlZGaW8tRiw2JVEmUF9hdXhGJ0YvRjJGanFGXXJGOUY5RjlGOUZpby1GIzYmRmpyRlktRiM2JkZobkZbby1GUDYkLUYjNihGZW9GaW8tRiM2JkZhcEZbby1GUDYkLUYjNihGaHBGaW9GanJGanFGXXJGOUY5RjlGanFGXXJGOUY5RjlGOUZpby1GIzYmRmhwRlktRiM2JkZobkZbby1GUDYkLUYjNiotRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiUtRiw2JVEiYUYnRi9GMkZecUZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRlt1LUZfcTYkUSIyRidGOUZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRlt1LUZfcTYkUSIzRidGOUZicUZpb0ZWRmpxRl1yRjlGOUY5RmpxRl1yRjlGOUY5RjlGaW8tRiM2JkZlcUZZLUYjNiZGaG5GW28tRlA2JC1GIzY2LUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlLUYsNiVRImJGJ0YvRjJGXnFGYnFGaW9GVkZqcUZdckY5RjlGOUZpby1GIzYmRmFwRltvLUZQNiQtRiM2KC1GaXA2JUZkd0ZmdUZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRmR3RmF2RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGZHctRl9xNiRRIjRGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGZHctRl9xNiRRIjVGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGZHctRl9xNiRRIjZGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGZHctRl9xNiRRIjdGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGZHctRl9xNiRRIjhGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGZHctRl9xNiRRIjlGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGanFGXXJGOUY5RjlGOUZpby1GIzYmRml0RlktRiw2JVElQXRvbUYnRi9GMkY5RmlvLUYjNiZGZHVGWUZbXWxGOUZpby1GIzYmRl92RllGW11sRjlGaW8tRiM2JkZid0ZZRltdbEY5RmlvLUYjNiZGXXhGWUZbXWxGOUZpby1GIzYmRmV4RllGW11sRjlGaW8tRiM2JkZdeUZZRltdbEY5RmlvLUYjNiZGaHlGWUZbXWxGOUZpby1GIzYmRmN6RllGW11sRjlGaW8tRiM2JkZeW2xGWUZbXWxGOUZpby1GIzYmRmlbbEZZRltdbEY5RmlvLUYjNiZGZFxsRllGW11sRjlGanFGXXJGOUY5LyUlb3BlbkdRJyZsY3ViO0YnLyUmY2xvc2VHUScmcmN1YjtGJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStuZXdHcmFtbWFyR0YoPDMvSSREZWVHRigtSSZVbmlvbkdGKDYkSShFcHNpbG9uR0YoLUklUHJvZEdGKDYkJkkiTEdGKDYjIiIiJkkiUkdGKEY6L0kiUEdGKC1GNjYkRjBJJlBfYXV4R0YoL0ZCLUYyNiRGNC1GNjYkRjhGQi9GOC1GMjYlLUY2NiQmSSJhR0YoRjpGMC1GNjYkJkZONiMiIiNGMC1GNjYkJkZONiMiIiRGMC9GPC1GMjYrLUY2NiQmSSJiR0YoRjpGMC1GNjYkJkZpbkZSRjAtRjY2JCZGaW5GV0YwLUY2NiQmRmluNiMiIiVGMC1GNjYkJkZpbjYjIiImRjAtRjY2JCZGaW42IyIiJ0YwLUY2NiQmRmluNiMiIihGMC1GNjYkJkZpbjYjIiIpRjAtRjY2JCZGaW42IyIiKkYwL0ZNSSVBdG9tR0YoL0ZRRl9xL0ZWRl9xL0ZobkZfcS9GXG9GX3EvRl9vRl9xL0Zib0ZfcS9GZ29GX3EvRlxwRl9xL0ZhcEZfcS9GZnBGX3EvRltxRl9xNyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L36" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">We can also make the grammar POINTED if necessary:</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(StringTools):

pointedName := proc(nameIn);
  local nameString;
  if nameIn = Dee then
    return `D_pointed`;
  elif nameIn = P then
    return `P_pointed`;
  elif nameIn = P_aux then
    return `P_aux_pointed`;
  else
    #print(nameIn);
    nameString := convert(nameIn, string);
<Font encoding="UTF-8">    #printf(&quot;nameString[1]: %a\134n&quot;, </Font>nameString[1]);
    if nameString[1] = &quot;L&quot; or nameString[1] = &quot;R&quot; then
      return parse(cat(nameString[1], &quot;_pointed&quot;, nameString[2..]));
    else # Must be an atom
      return nameIn;
    fi;
  fi;
end proc:

pointedExpression := proc(exprIn);
  local exprString, i, productArguments, unionArguments, unionArgumentsFiltered, unionArgumentsUnfiltered, a;
  # Either a union, a product, or an atom.
  exprString := convert(exprIn, string);
  #print(exprString);
  if exprString[1..5] = &quot;Union&quot; then
    #print(&quot;It's a UNION&quot;);
<Font encoding="UTF-8">    #printf(&quot;op(exprIn) = %a\134n&quot;, [op(exprIn)]);
</Font>    unionArgumentsUnfiltered := [seq(pointedExpression(i), i in [op(exprIn)])];

    # Flatten out any Unions
    unionArgumentsFiltered := [];
    for a in unionArgumentsUnfiltered do
      if convert(a, string)[1..5] = &quot;Union&quot; then
        unionArgumentsFiltered := [op(unionArgumentsFiltered), op(a)];
      elif convert(a, string)[1] = &quot;E&quot; then
        # Epsilon. Don't add to union for pointed classes
      else
        unionArgumentsFiltered := [op(unionArgumentsFiltered), a];
      fi;
    od;
    return Union(op(unionArgumentsFiltered));
  elif exprString[1..4] = &quot;Prod&quot; then
    #print(&quot;It's a PRODUCT&quot;);
    # For our purposes, products always have 2 arguments
    productArguments := [op(exprIn)];
    return Union(Prod(pointedExpression(productArguments[1]), productArguments[2]), Prod(productArguments[1], pointedExpression(productArguments[2])));
  else
    #print(&quot;It's a SYMBOL&quot;);
    return pointedName(exprIn);
  fi;
end proc:

pointedGrammar := proc(grammarIn);
  local grammarList, grammarListPointed, i, newEqn;
  grammarList := convert(grammarIn, list);
  grammarListPointed := grammarList;
  for i in grammarList do
    newEqn := pointedName(lhs(i)) = pointedExpression(rhs(i));
    grammarListPointed := [op(grammarListPointed), newEqn];
  od;
  return convert(grammarListPointed, set);
end proc:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L37" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">

if (getPointedGrammar) then
  newGrammar := pointedGrammar(newGrammar);
fi;</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErbmV3R3JhbW1hckYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSShtZmVuY2VkR0YkNiYtRiM2UC1GIzYmLUYsNiVRJERlZUYnRi9GMi1GNjYtUSkmZXF1YWxzO0YnRjlGO0Y+RkBGQkZERkZGSEZKRk0tRiM2Ji1GLDYlUSZVbmlvbkYnRi9GMi1GNjYtUTAmQXBwbHlGdW5jdGlvbjtGJ0Y5RjtGPkZARkJGREZGRkgvRktRJjAuMGVtRicvRk5GX28tRlA2JC1GIzYoLUYsNiVRKiZFcHNpbG9uO0YnL0YwRj1GOS1GNjYtUSIsRidGOUY7L0Y/RjFGQEZCRkRGRkZIRl5vL0ZOUSwwLjMzMzMzMzNlbUYnLUYjNiYtRiw2JVElUHJvZEYnRi9GMkZbby1GUDYkLUYjNigtSSVtc3ViR0YkNiUtRiw2JVEiTEYnRi9GMi1JI21uR0YkNiRRIjFGJ0Y5LyUvc3Vic2NyaXB0c2hpZnRHUSIwRidGaW8tRmlwNiUtRiw2JVEiUkYnRi9GMkZecUZicS8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdGPUY5RjlGOUZqcUZdckY5RjlGOUY5RmlvLUYjNiYtRiw2JVEiUEYnRi9GMkZZLUYjNiZGYXBGW28tRlA2JC1GIzYoRlZGaW8tRiw2JVEmUF9hdXhGJ0YvRjJGanFGXXJGOUY5RjlGOUZpby1GIzYmRmpyRlktRiM2JkZobkZbby1GUDYkLUYjNihGZW9GaW8tRiM2JkZhcEZbby1GUDYkLUYjNihGaHBGaW9GanJGanFGXXJGOUY5RjlGanFGXXJGOUY5RjlGOUZpby1GIzYmLUYsNiVRKkRfcG9pbnRlZEYnRi9GMkZZLUYjNiZGaG5GW28tRlA2JC1GIzYoLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlLUYsNiVRKkxfcG9pbnRlZEYnRi9GMkZecUZicUZpb0ZlcUZqcUZdckY5RjlGOUZpby1GIzYmRmFwRltvLUZQNiQtRiM2KEZocEZpby1GaXA2JS1GLDYlUSpSX3BvaW50ZWRGJ0YvRjJGXnFGYnFGanFGXXJGOUY5RjlGanFGXXJGOUY5RjlGOUZpby1GIzYmLUYsNiVRLlBfYXV4X3BvaW50ZWRGJ0YvRjJGWS1GIzYmRmhuRltvLUZQNiQtRiM2KC1GIzYmRmFwRltvLUZQNiQtRiM2KEZcdUZpb0ZqckZqcUZdckY5RjlGOUZpby1GIzYmRmFwRltvLUZQNiQtRiM2KEZocEZpb0ZedkZqcUZdckY5RjlGOUZqcUZdckY5RjlGOUY5RmlvLUYjNiYtRiw2JVEqUF9wb2ludGVkRidGL0YyRlktRiM2JkZobkZbby1GUDYkLUYjNigtRiM2JkZhcEZbby1GUDYkLUYjNihGXXRGaW9GanJGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNihGVkZpb0ZedkZqcUZdckY5RjlGOUZqcUZdckY5RjlGOUY5RmlvLUYjNiZGaHBGWS1GIzYmRmhuRltvLUZQNiQtRiM2Ki1GIzYmRmFwRltvLUZQNiQtRiM2KC1GaXA2JS1GLDYlUSJhRidGL0YyRl5xRmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGanktRl9xNiRRIjJGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGanktRl9xNiRRIjNGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGanFGXXJGOUY5RjlGOUZpby1GIzYmRmVxRlktRiM2JkZobkZbby1GUDYkLUYjNjYtRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiUtRiw2JVEiYkYnRi9GMkZecUZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRmNcbEZlekZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRmNcbEZgW2xGYnFGaW9GVkZqcUZdckY5RjlGOUZpby1GIzYmRmFwRltvLUZQNiQtRiM2KC1GaXA2JUZjXGwtRl9xNiRRIjRGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGY1xsLUZfcTYkUSI1RidGOUZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRmNcbC1GX3E2JFEiNkYnRjlGYnFGaW9GVkZqcUZdckY5RjlGOUZpby1GIzYmRmFwRltvLUZQNiQtRiM2KC1GaXA2JUZjXGwtRl9xNiRRIjdGJ0Y5RmJxRmlvRlZGanFGXXJGOUY5RjlGaW8tRiM2JkZhcEZbby1GUDYkLUYjNigtRmlwNiVGY1xsLUZfcTYkUSI4RidGOUZicUZpb0ZWRmpxRl1yRjlGOUY5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoLUZpcDYlRmNcbC1GX3E2JFEiOUYnRjlGYnFGaW9GVkZqcUZdckY5RjlGOUZqcUZdckY5RjlGOUY5RmlvLUYjNiZGaHlGWS1GLDYlUSVBdG9tRidGL0YyRjlGaW8tRiM2JkZjekZZRmphbEY5RmlvLUYjNiZGXltsRllGamFsRjlGaW8tRiM2JkZhXGxGWUZqYWxGOUZpby1GIzYmRlxdbEZZRmphbEY5RmlvLUYjNiZGZF1sRllGamFsRjlGaW8tRiM2JkZcXmxGWUZqYWxGOUZpby1GIzYmRmdebEZZRmphbEY5RmlvLUYjNiZGYl9sRllGamFsRjlGaW8tRiM2JkZdYGxGWUZqYWxGOUZpby1GIzYmRmhgbEZZRmphbEY5RmlvLUYjNiZGY2FsRllGamFsRjlGaW8tRiM2JkZcdUZZLUYjNiZGaG5GW28tRlA2JC1GIzYwRmJ5RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoRmh5RmlvRl10RmpxRl1yRjlGOUY5RmlvRl16RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoRmN6RmlvRl10RmpxRl1yRjlGOUY5RmlvRmh6RmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoRl5bbEZpb0ZddEZqcUZdckY5RjlGOUZqcUZdckY5RjlGOUY5RmlvLUYjNiZGZ3VGWS1GIzYmRmhuRltvLUZQNiQtRiM2SEZbXGxGaW8tRiM2JkZhcEZbby1GUDYkLUYjNihGYVxsRmlvRl10RmpxRl1yRjlGOUY5RmlvRmZcbEZpby1GIzYmRmFwRltvLUZQNiQtRiM2KEZcXWxGaW9GXXRGanFGXXJGOUY5RjlGaW9GXl1sRmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoRmRdbEZpb0ZddEZqcUZdckY5RjlGOUZpb0ZmXWxGaW8tRiM2JkZhcEZbby1GUDYkLUYjNihGXF5sRmlvRl10RmpxRl1yRjlGOUY5RmlvRmFebEZpby1GIzYmRmFwRltvLUZQNiQtRiM2KEZnXmxGaW9GXXRGanFGXXJGOUY5RjlGaW9GXF9sRmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoRmJfbEZpb0ZddEZqcUZdckY5RjlGOUZpb0ZnX2xGaW8tRiM2JkZhcEZbby1GUDYkLUYjNihGXWBsRmlvRl10RmpxRl1yRjlGOUY5RmlvRmJgbEZpby1GIzYmRmFwRltvLUZQNiQtRiM2KEZoYGxGaW9GXXRGanFGXXJGOUY5RjlGaW9GXWFsRmlvLUYjNiZGYXBGW28tRlA2JC1GIzYoRmNhbEZpb0ZddEZqcUZdckY5RjlGOUZqcUZdckY5RjlGOUY5RmpxRl1yRjlGOS8lJW9wZW5HUScmbGN1YjtGJy8lJmNsb3NlR1EnJnJjdWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStuZXdHcmFtbWFyR0YoPDgvSSREZWVHRigtSSZVbmlvbkdGKDYkSShFcHNpbG9uR0YoLUklUHJvZEdGKDYkJkkiTEdGKDYjIiIiJkkiUkdGKEY6L0kiUEdGKC1GNjYkRjBJJlBfYXV4R0YoL0ZCLUYyNiRGNC1GNjYkRjhGQi9JKkRfcG9pbnRlZEdGKC1GMjYkLUY2NiQmSSpMX3BvaW50ZWRHRihGOkY8LUY2NiRGOCZJKlJfcG9pbnRlZEdGKEY6L0kuUF9hdXhfcG9pbnRlZEdGKC1GMjYkLUY2NiRGTkZCLUY2NiRGOEZVL0kqUF9wb2ludGVkR0YoLUYyNiQtRjY2JEZJRkItRjY2JEYwRlUvRjgtRjI2JS1GNjYkJkkiYUdGKEY6RjAtRjY2JCZGZG82IyIiI0YwLUY2NiQmRmRvNiMiIiRGMC9GPC1GMjYrLUY2NiQmSSJiR0YoRjpGMC1GNjYkJkZlcEZob0YwLUY2NiQmRmVwRl1wRjAtRjY2JCZGZXA2IyIiJUYwLUY2NiQmRmVwNiMiIiZGMC1GNjYkJkZlcDYjIiInRjAtRjY2JCZGZXA2IyIiKEYwLUY2NiQmRmVwNiMiIilGMC1GNjYkJkZlcDYjIiIqRjAvRmNvSSVBdG9tR0YoL0Znb0Zbcy9GXHBGW3MvRmRwRltzL0ZocEZbcy9GW3FGW3MvRl5xRltzL0ZjcUZbcy9GaHFGW3MvRl1yRltzL0ZickZbcy9GZ3JGW3MvRk4tRjI2KEZhby1GNjYkRmNvRklGZW8tRjY2JEZnb0ZJRmpvLUY2NiRGXHBGSS9GUi1GMjY0RmJwLUY2NiRGZHBGSUZmcC1GNjYkRmhwRklGaXAtRjY2JEZbcUZJRlxxLUY2NiRGXnFGSUZhcS1GNjYkRmNxRklGZnEtRjY2JEZocUZJRltyLUY2NiRGXXJGSUZgci1GNjYkRmJyRklGZXItRjY2JEZnckZJNyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L38" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L39" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">pointedName(L[1]);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXN1Ykc2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbWlHRiQ2JVEqTF9wb2ludGVkRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW5HRiQ2JFEiMUYnL0YzUSdub3JtYWxGJy8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYn">JkkqTF9wb2ludGVkRzYiNiMiIiI=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L40" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L41" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Now to get the generating function(s) from the grammar.

(NOTE: If the grammar is too large and I need to consider a polynomial approximation instead, then use a different file called StepsetToGenFunctionsComplete_V2_Polynomial)</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">exactSol := gfsolve(newGrammar, unlabeled, z):</Text-field>
</Input>
</Group>
<Group labelreference="L42" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Find the singularity of the generating function.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(DEtools):

findEvals := proc(exactSolIn, lowGuess, highGuess, errAmount, recursionLevel := 0);
  local newGuess, newEvals, i;
  if (abs(highGuess - lowGuess) &lt; errAmount) or (recursionLevel &gt; 50) then
    return lowGuess;
  else
    newGuess := (highGuess + lowGuess)/2;
    newEvals := {seq(evalf(eval(rhs(i), z = newGuess)), i in exactSolIn)};
    for i in newEvals do
      if (Im(i) &lt;&gt; 0) or (Re(i) &lt; 0) then
        # Too high
        return findEvals(exactSolIn, lowGuess, newGuess, errAmount, recursionLevel + 1);
      fi;
    od:
    # Too low
    return findEvals(exactSolIn, newGuess, highGuess, errAmount, recursionLevel + 1);
  fi;
end proc:</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L43" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">In order to use the above function, we need a low guess and a high guess for the evaluation. We can find this approximation with the  rho_approx value calculated earlier. This is a precaution to make sure we don't accidentally evaluate slightly past the dominant singularity.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">rho_approx := findEvals(exactSol, rho_approx * 0.5, rho_approx * 1.5, 0.0000000000001);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErcmhvX2FwcHJveEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtbkdGJDYkUS4wLjA5NjIyNTA0MzQwRidGOUY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStyaG9fYXBwcm94R0YoJCIrU1ZdQScqISM2NyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L57" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Here, we can decide on a &quot;fiat&quot; value for rho_approx if necessary.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">override_rho := true;
if (override_rho) then
  rho_approx := 0.09622504340;
fi;</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEtb3ZlcnJpZGVfcmhvRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GM1Enbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj0vJSlzdHJldGNoeUdGPS8lKnN5bW1ldHJpY0dGPS8lKGxhcmdlb3BHRj0vJS5tb3ZhYmxlbGltaXRzR0Y9LyUnYWNjZW50R0Y9LyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTC1GLDYlRjFGL0YyRjk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SS1vdmVycmlkZV9yaG9HRihJJXRydWVHRiY3I0Yu</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVErcmhvX2FwcHJveEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1JI21vR0YkNi1RKSZBc3NpZ247RicvRjNRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y9LyUpc3RyZXRjaHlHRj0vJSpzeW1tZXRyaWNHRj0vJShsYXJnZW9wR0Y9LyUubW92YWJsZWxpbWl0c0dGPS8lJ2FjY2VudEdGPS8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRkwtSSNtbkdGJDYkUS4wLjA5NjIyNTA0MzQwRidGOUY5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SStyaG9fYXBwcm94R0YoJCIrU1ZdQScqISM2NyNGLg==</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L44" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">Now I can find the evaluations and convert to a string to import to Unity.</Text-field><Text-field style="Text" layout="Normal"></Text-field><Text-field style="Text" layout="Normal">NOTE: One area of improvement would be to make sure the floats are formatted correctly. Sometimes they are put in scientific notation, which doesn't work well in C#.</Text-field><Text-field prompt="&gt; " style="Maple Input" layout="Normal">evaluations := {seq(lhs(i) = evalf(eval(rhs(i), z = rho_approx)), i in exactSol)};</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEsZXZhbHVhdGlvbnNGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkobWZlbmNlZEdGJDYmLUYjNlAtRiM2Ji1GIzYmLUYsNiVRJERlZUYnRi9GMi1GNjYtUTAmQXBwbHlGdW5jdGlvbjtGJ0Y5RjtGPkZARkJGREZGRkgvRktRJjAuMGVtRicvRk5GaW4tRlA2JC1GIzYmLUYsNiVRInpGJ0YvRjIvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj1GOUY5RjktRjY2LVEpJmVxdWFscztGJ0Y5RjtGPkZARkJGREZGRkhGSkZNLUkjbW5HRiQ2JFEsMS45OTk2NTA3NzZGJ0Y5RjktRjY2LVEiLEYnRjlGOy9GP0YxRkBGQkZERkZGSEZobi9GTlEsMC4zMzMzMzMzZW1GJy1GIzYmLUYjNiYtRiw2JVEiUEYnRi9GMkZlbkZbb0Y5RmdvLUZbcDYkUSw0LjczMDA5NjE3N0YnRjlGOUZecC1GIzYmLUYjNiYtRiw2JVEmUF9hdXhGJ0YvRjJGZW5GW29GOUZnby1GW3A2JFEsMi4zNjU0NjExMzFGJ0Y5RjlGXnAtRiM2Ji1GIzYmLUYsNiVRKkRfcG9pbnRlZEYnRi9GMkZlbkZbb0Y5RmdvLUZbcDYkUSwxMTQ0OC4wMDAwMEYnRjlGOUZecC1GIzYmLUYjNiYtRiw2JVEuUF9hdXhfcG9pbnRlZEYnRi9GMkZlbkZbb0Y5RmdvLUZbcDYkUSwxMDM4NC41MzI2NkYnRjlGOUZecC1GIzYmLUYjNiYtRiw2JVEqUF9wb2ludGVkRidGL0YyRmVuRltvRjlGZ28tRltwNiRRLDY0MDY1LjIwNTk4RidGOUY5Rl5wLUYjNiYtRiM2Ji1JJW1zdWJHRiQ2JS1GLDYlUSJMRidGL0YyLUZbcDYkUSIxRidGOS8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRmVuRltvRjlGZ28tRltwNiRRLTAuNTc3MjQ5NDQ3OEYnRjlGOUZecC1GIzYmLUYjNiYtRlt0NiUtRiw2JVEiUkYnRi9GMkZgdEZjdEZlbkZbb0Y5RmdvLUZbcDYkUSwxLjczMTc0ODM0M0YnRjlGOUZecC1GIzYmLUYjNiYtRlt0NiUtRiw2JVEiYUYnRi9GMkZgdEZjdEZlbkZbb0Y5RmdvLUZbcDYkUS4wLjA5NjIyNTA0MzQwRidGOUY5Rl5wLUYjNiYtRiM2Ji1GW3Q2JUZbdi1GW3A2JFEiMkYnRjlGY3RGZW5GW29GOUZnb0ZedkY5Rl5wLUYjNiYtRiM2Ji1GW3Q2JUZbdi1GW3A2JFEiM0YnRjlGY3RGZW5GW29GOUZnb0ZedkY5Rl5wLUYjNiYtRiM2Ji1GW3Q2JS1GLDYlUSJiRidGL0YyRmB0RmN0RmVuRltvRjlGZ29GXnZGOUZecC1GIzYmLUYjNiYtRlt0NiVGaXdGZ3ZGY3RGZW5GW29GOUZnb0ZedkY5Rl5wLUYjNiYtRiM2Ji1GW3Q2JUZpd0Zgd0ZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlRml3LUZbcDYkUSI0RidGOUZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlRml3LUZbcDYkUSI1RidGOUZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlRml3LUZbcDYkUSI2RidGOUZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlRml3LUZbcDYkUSI3RidGOUZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlRml3LUZbcDYkUSI4RidGOUZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlRml3LUZbcDYkUSI5RidGOUZjdEZlbkZbb0Y5RmdvRl52RjlGXnAtRiM2Ji1GIzYmLUZbdDYlLUYsNiVRKkxfcG9pbnRlZEYnRi9GMkZgdEZjdEZlbkZbb0Y5RmdvLUZbcDYkUSwzMzA1LjMyMDc3NkYnRjlGOUZecC1GIzYmLUYjNiYtRlt0NiUtRiw2JVEqUl9wb2ludGVkRidGL0YyRmB0RmN0RmVuRltvRjlGZ28tRltwNiRRLDk5MTUuOTYyMzI4RidGOUY5RmJvRmVvRjlGOS8lJW9wZW5HUScmbGN1YjtGJy8lJmNsb3NlR1EnJnJjdWI7RidGOQ==">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSxldmFsdWF0aW9uc0dGKDw4Ly1JJERlZUdGKDYjSSJ6R0YoJCIrdzJsKio+ISIqLy1JIlBHRihGMiQiK3hoNElaRjYvLUkmUF9hdXhHRihGMiQiK0o2WWxCRjYvLUkqRF9wb2ludGVkR0YoRjIkIisrKyFbOSIhIiYvLUkuUF9hdXhfcG9pbnRlZEdGKEYyJCIrbUtYUTVGRi8tSSpQX3BvaW50ZWRHRihGMiQiKylmP2xTJ0ZGLy0mSSJMR0YoNiMiIiJGMiQiK3lXXHNkISM1Ly0mSSJSR0YoRlVGMiQiK1YkWzx0IkY2Ly0mSSJhR0YoRlVGMiQiK1NWXUEnKiEjNi8tJkZdbzYjIiIjRjJGXm8vLSZGXW82IyIiJEYyRl5vLy0mSSJiR0YoRlVGMkZeby8tJkZecEZkb0YyRl5vLy0mRl5wRmlvRjJGXm8vLSZGXnA2IyIiJUYyRl5vLy0mRl5wNiMiIiZGMkZeby8tJkZecDYjIiInRjJGXm8vLSZGXnA2IyIiKEYyRl5vLy0mRl5wNiMiIilGMkZeby8tJkZecDYjIiIqRjJGXm8vLSZJKkxfcG9pbnRlZEdGKEZVRjIkIit3MkswTCEiJy8tJkkqUl9wb2ludGVkR0YoRlVGMiQiK0dCJ2YiKipGaXI3I0Yu</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" labelreference="L55" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(StringTools):
</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L56" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">toReturn := convert(['evaluations' = evaluations, 'grammar' = newGrammar, 'rho_approx' = {rho_approx}, 'atomSet' = atomSet], string):
<Font encoding="UTF-8">toReturn := RegSubs(&quot;\134\134[([0-9]*)\134\134]&quot; = &quot;_\134\1341&quot;</Font>, toReturn):
toReturn := Subs([&quot;Dee&quot; = &quot;D&quot;, &quot;(z)&quot; = &quot;&quot;, &quot;atom_&quot; = &quot;&quot;], toReturn);</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYmLUkjbWlHRiQ2JVEpdG9SZXR1cm5GJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUSkmQXNzaWduO0YnL0YzUSdub3JtYWxGJy8lJmZlbmNlR1EmZmFsc2VGJy8lKnNlcGFyYXRvckdGPS8lKXN0cmV0Y2h5R0Y9LyUqc3ltbWV0cmljR0Y9LyUobGFyZ2VvcEdGPS8lLm1vdmFibGVsaW1pdHNHRj0vJSdhY2NlbnRHRj0vJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0ZMLUkjbXNHRiQ2I1FeXHJbZXZhbHVhdGlvbnN+PX58ZnJEfj1+MS45OTk2NTA3NzYsflB+PX40LjczMDA5NjE3Nyx+UF9hdXh+PX4yLjM2NTQ2MTEzMSx+RF9wb2ludGVkfj1+MTE0NDguMDAwMDAsflBfYXV4X3BvaW50ZWR+PX4xMDM4NC41MzI2Nix+UF9wb2ludGVkfj1+NjQwNjUuMjA1OTgsfkxfMX49fi41NzcyNDk0NDc4LH5SXzF+PX4xLjczMTc0ODM0Myx+YV8xfj1+Ljk2MjI1MDQzNDBlLTEsfmFfMn49fi45NjIyNTA0MzQwZS0xLH5hXzN+PX4uOTYyMjUwNDM0MGUtMSx+Yl8xfj1+Ljk2MjI1MDQzNDBlLTEsfmJfMn49fi45NjIyNTA0MzQwZS0xLH5iXzN+PX4uOTYyMjUwNDM0MGUtMSx+Yl80fj1+Ljk2MjI1MDQzNDBlLTEsfmJfNX49fi45NjIyNTA0MzQwZS0xLH5iXzZ+PX4uOTYyMjUwNDM0MGUtMSx+Yl83fj1+Ljk2MjI1MDQzNDBlLTEsfmJfOH49fi45NjIyNTA0MzQwZS0xLH5iXzl+PX4uOTYyMjUwNDM0MGUtMSx+TF9wb2ludGVkXzF+PX4zMzA1LjMyMDc3Nix+Ul9wb2ludGVkXzF+PX45OTE1Ljk2MjMyOHxocix+Z3JhbW1hcn49fnxmckR+PX5VbmlvbihFcHNpbG9uLFByb2QoTF8xLFJfMSkpLH5Qfj1+UHJvZChELFBfYXV4KSx+UF9hdXh+PX5VbmlvbihFcHNpbG9uLFByb2QoTF8xLFBfYXV4KSksfkRfcG9pbnRlZH49flVuaW9uKFByb2QoTF9wb2ludGVkXzEsUl8xKSxQcm9kKExfMSxSX3BvaW50ZWRfMSkpLH5QX2F1eF9wb2ludGVkfj1+VW5pb24oUHJvZChMX3BvaW50ZWRfMSxQX2F1eCksUHJvZChMXzEsUF9hdXhfcG9pbnRlZCkpLH5QX3BvaW50ZWR+PX5VbmlvbihQcm9kKERfcG9pbnRlZCxQX2F1eCksUHJvZChELFBfYXV4X3BvaW50ZWQpKSx+TF8xfj1+VW5pb24oUHJvZChhXzEsRCksUHJvZChhXzIsRCksUHJvZChhXzMsRCkpLH5SXzF+PX5VbmlvbihQcm9kKGJfMSxEKSxQcm9kKGJfMixEKSxQcm9kKGJfMyxEKSxQcm9kKGJfNCxEKSxQcm9kKGJfNSxEKSxQcm9kKGJfNixEKSxQcm9kKGJfNyxEKSxQcm9kKGJfOCxEKSxQcm9kKGJfOSxEKSksfmFfMX49fkF0b20sfmFfMn49fkF0b20sfmFfM349fkF0b20sfmJfMX49fkF0b20sfmJfMn49fkF0b20sfmJfM349fkF0b20sfmJfNH49fkF0b20sfmJfNX49fkF0b20sfmJfNn49fkF0b20sfmJfN349fkF0b20sfmJfOH49fkF0b20sfmJfOX49fkF0b20sfkxfcG9pbnRlZF8xfj1+VW5pb24oUHJvZChhXzEsRCksUHJvZChhXzEsRF9wb2ludGVkKSxQcm9kKGFfMixEKSxQcm9kKGFfMixEX3BvaW50ZWQpLFByb2QoYV8zLEQpLFByb2QoYV8zLERfcG9pbnRlZCkpLH5SX3BvaW50ZWRfMX49flVuaW9uKFByb2QoYl8xLEQpLFByb2QoYl8xLERfcG9pbnRlZCksUHJvZChiXzIsRCksUHJvZChiXzIsRF9wb2ludGVkKSxQcm9kKGJfMyxEKSxQcm9kKGJfMyxEX3BvaW50ZWQpLFByb2QoYl80LEQpLFByb2QoYl80LERfcG9pbnRlZCksUHJvZChiXzUsRCksUHJvZChiXzUsRF9wb2ludGVkKSxQcm9kKGJfNixEKSxQcm9kKGJfNixEX3BvaW50ZWQpLFByb2QoYl83LEQpLFByb2QoYl83LERfcG9pbnRlZCksUHJvZChiXzgsRCksUHJvZChiXzgsRF9wb2ludGVkKSxQcm9kKGJfOSxEKSxQcm9kKGJfOSxEX3BvaW50ZWQpKXxocix+cmhvX2FwcHJveH49fnxmci45NjIyNTA0MzQwZS0xfGhyLH5hdG9tU2V0fj1+fGZyYV8xfj1+WzEsfjAsfjBdLH5hXzJ+PX5bMCx+MSx+MF0sfmFfM349flswLH4wLH4xXSx+Yl8xfj1+Wy0xLH4wLH4wXSx+Yl8yfj1+WzAsfi0xLH4wXSx+Yl8zfj1+WzAsfjAsfi0xXSx+Yl80fj1+Wy0xLH4wLH4wXSx+Yl81fj1+WzAsfi0xLH4wXSx+Yl82fj1+WzAsfjAsfi0xXSx+Yl83fj1+Wy0xLH4wLH4wXSx+Yl84fj1+WzAsfi0xLH4wXSx+Yl85fj1+WzAsfjAsfi0xXXxocl1GJ0Y5">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSl0b1JldHVybkdGKFFeXHJbZXZhbHVhdGlvbnN+PX58ZnJEfj1+MS45OTk2NTA3NzYsflB+PX40LjczMDA5NjE3Nyx+UF9hdXh+PX4yLjM2NTQ2MTEzMSx+RF9wb2ludGVkfj1+MTE0NDguMDAwMDAsflBfYXV4X3BvaW50ZWR+PX4xMDM4NC41MzI2Nix+UF9wb2ludGVkfj1+NjQwNjUuMjA1OTgsfkxfMX49fi41NzcyNDk0NDc4LH5SXzF+PX4xLjczMTc0ODM0Myx+YV8xfj1+Ljk2MjI1MDQzNDBlLTEsfmFfMn49fi45NjIyNTA0MzQwZS0xLH5hXzN+PX4uOTYyMjUwNDM0MGUtMSx+Yl8xfj1+Ljk2MjI1MDQzNDBlLTEsfmJfMn49fi45NjIyNTA0MzQwZS0xLH5iXzN+PX4uOTYyMjUwNDM0MGUtMSx+Yl80fj1+Ljk2MjI1MDQzNDBlLTEsfmJfNX49fi45NjIyNTA0MzQwZS0xLH5iXzZ+PX4uOTYyMjUwNDM0MGUtMSx+Yl83fj1+Ljk2MjI1MDQzNDBlLTEsfmJfOH49fi45NjIyNTA0MzQwZS0xLH5iXzl+PX4uOTYyMjUwNDM0MGUtMSx+TF9wb2ludGVkXzF+PX4zMzA1LjMyMDc3Nix+Ul9wb2ludGVkXzF+PX45OTE1Ljk2MjMyOHxocix+Z3JhbW1hcn49fnxmckR+PX5VbmlvbihFcHNpbG9uLFByb2QoTF8xLFJfMSkpLH5Qfj1+UHJvZChELFBfYXV4KSx+UF9hdXh+PX5VbmlvbihFcHNpbG9uLFByb2QoTF8xLFBfYXV4KSksfkRfcG9pbnRlZH49flVuaW9uKFByb2QoTF9wb2ludGVkXzEsUl8xKSxQcm9kKExfMSxSX3BvaW50ZWRfMSkpLH5QX2F1eF9wb2ludGVkfj1+VW5pb24oUHJvZChMX3BvaW50ZWRfMSxQX2F1eCksUHJvZChMXzEsUF9hdXhfcG9pbnRlZCkpLH5QX3BvaW50ZWR+PX5VbmlvbihQcm9kKERfcG9pbnRlZCxQX2F1eCksUHJvZChELFBfYXV4X3BvaW50ZWQpKSx+TF8xfj1+VW5pb24oUHJvZChhXzEsRCksUHJvZChhXzIsRCksUHJvZChhXzMsRCkpLH5SXzF+PX5VbmlvbihQcm9kKGJfMSxEKSxQcm9kKGJfMixEKSxQcm9kKGJfMyxEKSxQcm9kKGJfNCxEKSxQcm9kKGJfNSxEKSxQcm9kKGJfNixEKSxQcm9kKGJfNyxEKSxQcm9kKGJfOCxEKSxQcm9kKGJfOSxEKSksfmFfMX49fkF0b20sfmFfMn49fkF0b20sfmFfM349fkF0b20sfmJfMX49fkF0b20sfmJfMn49fkF0b20sfmJfM349fkF0b20sfmJfNH49fkF0b20sfmJfNX49fkF0b20sfmJfNn49fkF0b20sfmJfN349fkF0b20sfmJfOH49fkF0b20sfmJfOX49fkF0b20sfkxfcG9pbnRlZF8xfj1+VW5pb24oUHJvZChhXzEsRCksUHJvZChhXzEsRF9wb2ludGVkKSxQcm9kKGFfMixEKSxQcm9kKGFfMixEX3BvaW50ZWQpLFByb2QoYV8zLEQpLFByb2QoYV8zLERfcG9pbnRlZCkpLH5SX3BvaW50ZWRfMX49flVuaW9uKFByb2QoYl8xLEQpLFByb2QoYl8xLERfcG9pbnRlZCksUHJvZChiXzIsRCksUHJvZChiXzIsRF9wb2ludGVkKSxQcm9kKGJfMyxEKSxQcm9kKGJfMyxEX3BvaW50ZWQpLFByb2QoYl80LEQpLFByb2QoYl80LERfcG9pbnRlZCksUHJvZChiXzUsRCksUHJvZChiXzUsRF9wb2ludGVkKSxQcm9kKGJfNixEKSxQcm9kKGJfNixEX3BvaW50ZWQpLFByb2QoYl83LEQpLFByb2QoYl83LERfcG9pbnRlZCksUHJvZChiXzgsRCksUHJvZChiXzgsRF9wb2ludGVkKSxQcm9kKGJfOSxEKSxQcm9kKGJfOSxEX3BvaW50ZWQpKXxocix+cmhvX2FwcHJveH49fnxmci45NjIyNTA0MzQwZS0xfGhyLH5hdG9tU2V0fj1+fGZyYV8xfj1+WzEsfjAsfjBdLH5hXzJ+PX5bMCx+MSx+MF0sfmFfM349flswLH4wLH4xXSx+Yl8xfj1+Wy0xLH4wLH4wXSx+Yl8yfj1+WzAsfi0xLH4wXSx+Yl8zfj1+WzAsfjAsfi0xXSx+Yl80fj1+Wy0xLH4wLH4wXSx+Yl81fj1+WzAsfi0xLH4wXSx+Yl82fj1+WzAsfjAsfi0xXSx+Yl83fj1+Wy0xLH4wLH4wXSx+Yl84fj1+WzAsfi0xLH4wXSx+Yl85fj1+WzAsfjAsfi0xXXxocl1GKDcjRi4=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L72" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group><RTable handle="36893490561190854772">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU0NzcyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiIiIiFGKkYl</RTable><RTable handle="36893490561190854892">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU0ODkyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiEiIiJGKUYl</RTable><RTable handle="36893490561190855012">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1MDEyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiFGKSIiIkYl</RTable><RTable handle="36893490561190855132">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1MTMyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQhIiIiIiFGKkYl</RTable><RTable handle="36893490561190855252">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1MjUyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiEhIiJGKUYl</RTable><RTable handle="36893490561190855372">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1MzcyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiFGKSEiIkYl</RTable><RTable handle="36893490561190855492">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1NDkyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQhIiIiIiFGKkYl</RTable><RTable handle="36893490561190855612">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1NjEyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiEhIiJGKUYl</RTable><RTable handle="36893490561190855732">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1NzMyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiFGKSEiIkYl</RTable><RTable handle="36893490561190855852">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1ODUyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQhIiIiIiFGKkYl</RTable><RTable handle="36893490561190855972">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU1OTcyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiEhIiJGKUYl</RTable><RTable handle="36893490561190856092">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTkwODU2MDkyWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiFGKSEiIkYl</RTable><RTable handle="36893490561195296156">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMTk1Mjk2MTU2WColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQhIiNGKUYpRiU=</RTable><RTable handle="36893490561283560860">TTdSMApJQVJUQUJMRV9TQVZFLzM2ODkzNDkwNTYxMjgzNTYwODYwWColKWFueXRoaW5nRzYiLyUnY29vcmRzRyUqY2FydGVzaWFuR1tnbCEjJSEhISIkIiQiIiJGKUYpRiU=</RTable>
</Worksheet>